How do we handle git repositories? -> all models and stimuli in the same repo or do we use git submodules
Virtual environments? -> It would make sense to have one virtual env in the big project that's used to run everything, but the submodules/subprojects should have a requirements.txt file, so they can be run standalone
Branches naming? -> personal branches, development and master?
Protected branches -> should pushing to main be allowed -> I would say not, not even to maintainers and make everyone add stuff to master through merge requests
Code formatter? -> We can use black, ir can be set to be run automagically on each commit/push and optionally people can set up their IDE to run it on file save

Proposed directory structure
/
	stimuli/
	models/
		utils/ # functions and classed shared between different models (e.g., filter)
		some_model_family/ # (e.g., all the ODOG models from Joris' implementation)
			main.py # each model would have the main function that accepts a set of inputs and provide
			all_the_rest/
		.
		.
		.
	core/ # everything realated to keeping all the models and stimuli together -> the core dir of the whole project
		main.py # contains main function -> the thing that needs to be run after providing configs and selecting models/stimuli in some way


